name: CI
on:
  pull_request:
    branches: [master]
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the Branch
        id: checkout
        uses: actions/checkout@v2
      - name: Use NodeJS
        uses: actions/setup-node@v1
        with:
          node-version: "12.x"
      - run: echo WF_ENV:${GITHUB_REPOSITORY} 
      - run: npm ci 
      - run: npm run checkstyle
      - run: npm run build
      - name: Upload Build Artifact
        if: ${{ success() }}
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: build
      - run: npm test -- --coverage
        env:
          CI: true
      - name: Upload Test Coverage
        if: ${{ success() }}
        uses: actions/upload-artifact@v2
        with:
          name: code-coverage
          path: coverage
      - name: Deploy the App
        id: pushstep
        if: github.event_name == 'push'
        run: echoo 'deploying to Azure'
      - name: Open Issue 
        if: failure() && github.event_name == 'push'
        run: |
          curl --request POST \
          --url https://api.github.com/repos/${{
            github.repository }}/issues \
          --header 'authorization: Bearer ${{
            secrets.CUSTOM_TOKEN}}' \
          --header 'content-type: application/json' \
          --data '{
            "title" : "Automated issue for commit :${{ github.sha}}",
            "body":"This issue was automatically created by the GitHub Action workflow **${{ github.workflow }}**.
            \n\n The comiit hash was: _${{ github.sha}}_.",
            "assignees": ["${{
              github.event.pull_request.use.login }}"]
            }'
      - name: Slack Notification
        if: always()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_COLOR: '#3278BD'
          SLACK_MESSAGE: 'WORKFLOW COMPLETE ${steps.pushstep.outcome}'
          SLACK_TITLE: WORKFLOW COMPLETE
          SLACK_USERNAME: rtCamp
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
#      - name: Echo Step status
#        if: always() && github.event_name == 'push'
#        run: echo WF_ENV:${steps.pushstep.outcome}