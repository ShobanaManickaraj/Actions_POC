name: CI
on:
  pull_request:
    branches: [master]
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the Branch
        id: checkout
        uses: actions/checkout@v2
      - uses: actions/checkout@v2
        with:
          repository: AAInternal/sonarscan
          ref: v1.1.0
          token: "${{ secrets.AAINTERNAL_READ_TOKEN }}"
          path: ./.github/actions/sonarscan
      - name: sonarscan
        id: sonarscan
        env:
          DEPLOYMENT_ID: "deployment_sonarscan_node_test"
        uses: ./.github/actions/sonarscan
        with:
          token: "${{ secrets.SONARQUBE_TOKEN }}"
      - name: Use NodeJS
        uses: actions/setup-node@v1
        with:
          node-version: "12.x"
      - run: echo WF_ENV:${GITHUB_REPOSITORY} 
      - run: npm ci 
      - run: npm run checkstyle
      - run: npm run build
      - name: Upload Build Artifact
        if: ${{ success() }}
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: build
      - run: npm test -- --coverage
        env:
          CI: true
      - name: Upload Test Coverage
        if: ${{ success() }}
        uses: actions/upload-artifact@v2
        with:
          name: code-coverage
          path: coverage
      - name: Deploy the App
        id: pushstep
        if: github.event_name == 'push'
        run: |
          eccho 'deploying to Azure'
          echo '::set-output status=success'
      - name: Open Issue 
        if: failure() && github.event_name == 'push'
        run: |
          curl --request POST \
          --url https://api.github.com/repos/${{ github.repository }}/issues \
          --header 'authorization: Bearer ${{ secrets.CUSTOM_TOKEN }}' \
          --header 'content-type: application/json' \
          --data '{
            "title": "Automated issue for commit: ${{ github.sha }}",
            "body": "This issue was automatically created by the GitHub Action workflow **${{ github.workflow }}**. \n\n The commit hash was: _${{ github.sha }}_.",
            "assignees": ["${{ github.event.pull_request.user.login }}"]
            }'
     #   uses: wei/curl@master
     #   with:
     #     args: "-X POST --url https://api.github.com/repos/${{github.repository}}/issues -H 'Authorization: Bearer ${{secrets.CUSTOM_TOKEN}}' -H 'content-type: application/json' -H 'Accept: application/vnd.github.v3+json'  -d '{\"title\": \"Automated issue for commit :${{ github.sha }}\",\"body\": \"This issue was automatically created by the GitHub Action workflow **${{ github.workflow }}**. The commit hash was: _${{ github.sha}}_.\"}'"
       # run: |
       #   curl --request POST --url https://api.github.com/repos/${{github.repository}}/issues --header 'Authorization: Bearer ${{secrets.CUSTOM_TOKEN}}' --header 'content-type: application/json' --header 'Accept: application/vnd.github.v3+json'  --data '{"title": "Automated issue for commit :${{ github.sha }}","body": "This issue was automatically created by the GitHub Action workflow **${{ github.workflow }}**. The commit hash was: _${{ github.sha}}_."}'
      - name: Slack Notification
        if: always()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_COLOR: '#3278BD'
          SLACK_MESSAGE: 'WORKFLOW COMPLETE ${steps.pushstep.outcome}'
          SLACK_TITLE: WORKFLOW COMPLETE
          SLACK_USERNAME: rtCamp
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
#      - name: Echo Step status
#        if: always() && github.event_name == 'push'
#        run: echo WF_ENV:${steps.pushstep.outputs.status}