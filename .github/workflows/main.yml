# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  # Repository Dispatch
  repository_dispatch:
    types: [build]

  # Cron Schedule
  #schedule:
  #  - cron: "30 * * * *"

  #On Push
  #push:
  #  branches:
  #    - master
  #    - "feature/*"
  #    - "!feature/featC"
  #  tags:
  #    - v1.*
  #  paths:
  #    - "**.js"
  #    - "!filename.js"
    #paths-ignore:
    #  - ""
  #  branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
env:
  WF_ENV: workflow-env available to All Jobs
  WF_PASSCODE: ${{secrets.WF_PASSCODE}}
  ENCRYPT_GPG_KEY: ${{secrets.ENCRYPT_GPG_KEY}}
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    env:
      JOB_ENV: Job-env Available to all Steps
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Runs a single command using the runners shell
      - name: Check ENV Variable 
        env:
          STEP_ENV: Step-env Available to this Step
        run: |
           echo "WF_ENV: ${WF_ENV}"
           echo "JOB_ENV: ${JOB_ENV}"
           echo "STEP_ENV: ${STEP_ENV}"
           echo "PASSCODE : ${WF_PASSCODE}"
      - name: Check ENV 2 Variable 
        run: |
           echo "WF_ENV: ${WF_ENV}"
           echo "JOB_ENV: ${JOB_ENV}"
           echo "STEP_ENV: ${STEP_ENV}"
           echo "GITHUB_SHA: ${GITHUB_SHA}"
           echo "GITHUB_REPOSITORY: ${GITHUB_REPOSITORY}"

      - name: Check Run folder 
        run: |
             pwd
             ls
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Check out the Branch
        uses: actions/checkout@v2
      # Runs a single command using the runners shell
      - name: Check Run folder after Checkout 
        run: |
             pwd
             ls
      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!
      # DECRYPT FILE
      - name: Decrypt FILE
        run: gpg --quiet --batch --yes --decrypt --passphrase="$ENCRYPT_GPG_KEY" --output $HOME/secret.json AuthParameters.json.gpg
      # Display Secret 
      - name: Display FILE
        run: cat $HOME/secret.json
      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
      - name: Simple JS Actions
        id: greet
        uses: actions/hello-world-javascript-action@v1
        with:
          who-to-greet: Shobana
      - name: Send Slack Message
        if: ${{ always() }}
        uses: docker://technosophos/slack-notify
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_MESSAGE: "GitHub Action - ${GITHUB_REPOSITORY}  Commit - ${GITHUB_SHA}"
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: general
          SLACK_COLOR: '#3278BD'
          SLACK_ICON: https://github.com/rtCamp.png?size=48
          SLACK_MESSAGE: 'Post Content :rocket: ${GITHUB_ACTOR}'
          SLACK_TITLE: Post Title
          SLACK_USERNAME: rtCamp
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        
